'scopeName': 'source.ts2068basic'
'name': 'Timex/Sinclair 2068 Basic'
'fileTypes': ['bas', 'basic']
'patterns': [
  { # lines that do not begin with a line number are marked invalid
    'match': '^\\D+'
    'name': 'invalid.illegal.ts2068basic'
  }
  { # numeric constants, which may include scientific notation
    'match': '(^\\d+)|(\\b(([0-9]+(\\.|\\s*E\\s*)?[0-9]*)|(\\.[0-9]+))\\b)'
    'captures':
      '1':
        'name': 'markup.bold.ts2068basic'
      '2':
        'name': 'constant.numeric.ts2068basic'
    'name': 'meta.constant.ts2068basic'
  }
  { # strings
    'match': '(")([^"]*(")|.*\\n|.*$)'
    'captures':
      '1':
        'name': 'punctuation.definition.string.begin.ts2068basic'
      '2':
        'name': 'string.quoted.double.ts2068basic'
      '3':
        'name': 'punctuation.definition.string.begin.ts2068basic'
    'name': 'meta.string.quoted.double.ts2068basic'
  }
  { # operators
    'match': ':|;|=|\\+|-|\\*|/|\\^|\\?|!|\\[|\\]|"|&|<|>|\\\\|@|_'
    'name': 'keyword.operator.ts2068basic'
  }
# { # functions
#   'match': '\\b([A-Z]+\\$?)\\s*\\([^)]+\\)'
#   'captures':
#     '1':
#       'name': 'entity.name.function.ts2068basic'
# }
  { # functions without arguments are invalid
    'match': '\\b([A-Z]+\\$?)\\s*\\(\\)'
    'name': 'invalid.illegal.ts2068basic'
  }
  { # ABS function
    'match': '\\b(ABS)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # ACS function
    'match': '\\b(ACS)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # AND operator
    'match': '\\b(AND)'
    'name': 'keyword.operator.ts2068basic'
  }
  { # ABS function
    'match': '\\b(ABS)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # ASN function
    'match': '\\b(ASN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # AT command
    'match': '\\b(AT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # ATN function
    'match': '\\b(ATN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # ATTR function
    'match': '\\b(ATTR)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # BEEP command
    'match': '\\b(BEEP)'
    'name': 'keyword.control.ts2068basic'
  }
  { # BORDER command
    'match': '\\b(BORDER)'
    'name': 'keyword.control.ts2068basic'
  }
  { # BIN function
    'match': '\\b(BIN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # BRIGHT command
    'match': '\\b(BRIGHT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # CAT command
    'match': '\\b(CAT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # CHR$ function
    'match': '\\b(CHR(\\$|\\b))'
    'name': 'entity.name.function.ts2068basic'
  }
  { # CIRCLE command
    'match': '\\b(CIRCLE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # CLEAR command
    'match': '\\b(CLEAR)'
    'name': 'keyword.control.ts2068basic'
  }
  { # CLOSE command
    'match': '\\b(CLOSE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # CLS command
    'match': '\\b(CLS)'
    'name': 'keyword.control.ts2068basic'
  }
  { # CODE function
    'match': '\\b(CODE)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # CONTINUE command
    'match': '\\b(CONTINUE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # COPY command
    'match': '\\b(COPY)'
    'name': 'keyword.control.ts2068basic'
  }
  { # COS function
    'match': '\\b(COS)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # DATA command
    'match': '\\b(DATA)'
    'name': 'keyword.control.ts2068basic'
  }
  { # DEF command
    'match': '\\b(DEF)'
    'name': 'keyword.control.ts2068basic'
  }
  { # DELETE command
    'match': '\\b(DELETE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # DIM command
    'match': '\\b(DIM)'
    'name': 'keyword.control.ts2068basic'
  }
  { # DRAW command
    'match': '\\b(DRAW)'
    'name': 'keyword.control.ts2068basic'
  }
  { # EDIT command
    'match': '\\b(EDIT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # ERASE command
    'match': '\\b(ERASE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # ERR command
    'match': '\\b(ERR)'
    'name': 'keyword.control.ts2068basic'
  }
  { # EXP function
    'match': '\\b(EXP)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # FLASH command
    'match': '\\b(FLASH)'
    'name': 'keyword.control.ts2068basic'
  }
  { # FN function
    'match': '\\b(FN)'
    'name': 'entity.name.function.ts2068basic'
  }
  { # FOR command
    'match': '\\b(FOR)'
    'name': 'keyword.control.ts2068basic'
  }
  { # FORMAT command
    'match': '\\b(FORMAT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # FREE function
    'match': '\\b(FREE)'
    'name': 'entity.name.function.ts2068basic'
  }
  { # GO SUB command
    'match': '\\b(GO SUB)'
    'name': 'keyword.control.ts2068basic'
  }
  { # GO TO command
    'match': '\\b(GO TO)'
    'name': 'keyword.control.ts2068basic'
  }
  { # IF command
    'match': '\\b(IF)'
    'name': 'keyword.control.ts2068basic'
  }
  { # IN function
    'match': '\\b(IN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # INKEY$ function
    'match': '\\b(INKEY(\\$|\\b))'
    'name': 'entity.name.function.ts2068basic'
  }
  { # INPUT command
    'match': '\\b(INPUT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # INT function
    'match': '\\b(INT)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # INVERSE command
    'match': '\\b(INVERSE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # LEN function
    'match': '\\b(LEN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # LET command
    'match': '\\b(LET)'
    'name': 'keyword.control.ts2068basic'
  }
  { # LINE command
    'match': '\\b(LINE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # LIST command
    'match': '\\b(LIST)'
    'name': 'keyword.control.ts2068basic'
  }
  { # LLIST command
    'match': '\\b(LLIST)'
    'name': 'keyword.control.ts2068basic'
  }
  { # LN function
    'match': '\\b(LN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # LOAD command
    'match': '\\b(LOAD)'
    'name': 'keyword.control.ts2068basic'
  }
  { # LPRINT command
    'match': '\\b(LPRINT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # MERGE command
    'match': '\\b(MERGE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # MOVE command
    'match': '\\b(MOVE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # NEW command
    'match': '\\b(NEW)'
    'name': 'keyword.control.ts2068basic'
  }
  { # NEXT command
    'match': '\\b(NEXT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # NOT operator
    'match': '\\b(NOT)'
    'name': 'keyword.operator.ts2068basic'
  }
  { # ON command
    'match': '\\b(ON)'
    'name': 'keyword.control.ts2068basic'
  }
  { # OPEN command
    'match': '\\b(OPEN)'
    'name': 'keyword.control.ts2068basic'
  }
  { # OR operator
    'match': '\\b(OR)'
    'name': 'keyword.operator.ts2068basic'
  }
  { # OVER command
    'match': '\\b(OVER)'
    'name': 'keyword.control.ts2068basic'
  }
  { # PAPER command
    'match': '\\b(PAPER)'
    'name': 'keyword.control.ts2068basic'
  }
  { # PAUSE command
    'match': '\\b(PAUSE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # PEEK function
    'match': '\\b(PEEK)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # PI function
    'match': '\\b(PI)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # PLOT command
    'match': '\\b(PLOT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # POINT command
    'match': '\\b(POINT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # POKE command
    'match': '\\b(POKE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # PRINT command
    'match': '\\b(PRINT)'
    'name': 'keyword.control.ts2068basic'
  }
  { # RANDOMIZE command
    'match': '\\b(RANDOMIZE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # READ command
    'match': '\\b(READ)'
    'name': 'keyword.control.ts2068basic'
  }
  { # REM command (comments)
    'match': '(REM.*(\\n|$))'
    'name': 'comment.line.ts2068basic'
  }
  { # RESET command
    'match': '\\b(RESET)'
    'name': 'keyword.control.ts2068basic'
  }
  { # RESTORE command
    'match': '\\b(RESTORE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # RETURN command
    'match': '\\b(RETURN)'
    'name': 'keyword.control.ts2068basic'
  }
  { # RND function
    'match': '\\b(RND)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # RUN command
    'match': '\\b(RUN)'
    'name': 'keyword.control.ts2068basic'
  }
  { # SAVE command
    'match': '\\b(SAVE)'
    'name': 'keyword.control.ts2068basic'
  }
  { # SCREEN$ function
    'match': '\\b(SCREEN(\\$|\\b))'
    'name': 'entity.name.function.ts2068basic'
  }
  { # SGN function
    'match': '\\b(SGN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # SIN function
    'match': '\\b(SIN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # SOUND command
    'match': '\\b(SOUND)'
    'name': 'keyword.control.ts2068basic'
  }
  { # SQR function
    'match': '\\b(SQR)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # STEP command
    'match': '\\b(STEP)'
    'name': 'keyword.control.ts2068basic'
  }
  { # STICK command
    'match': '\\b(STICK)'
    'name': 'keyword.control.ts2068basic'
  }
  { # STOP command
    'match': '\\b(STOP)'
    'name': 'keyword.control.ts2068basic'
  }
  { # STR$ function
    'match': '\\b(STR(\\$|\\b))'
    'name': 'entity.name.function.ts2068basic'
  }
  { # TAB function
    'match': '\\b(TAB)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # TAN function
    'match': '\\b(TAN)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # THEN command
    'match': '\\b(THEN)'
    'name': 'keyword.control.ts2068basic'
  }
  { # TO command
    'match': '\b(TO)\b'
    'name': 'keyword.control.ts2068basic'
  }
  { # USR function
    'match': '\\b(USR)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # VAL function
    'match': '\\b(VAL)\\b'
    'name': 'entity.name.function.ts2068basic'
  }
  { # VERIFY command
    'match': '\\b(VERIFY)'
    'name': 'keyword.control.ts2068basic'
  }
]
